{"version":3,"sources":["pass_through.js"],"names":["HTTP","require","createGunzip","ClientRequest","module","exports","passThrough","passThroughFunction","arguments","length","hostname","request","truthy","callback","options","protocol","url","port","path","method","headers","agent","auth","http","trailers","addTrailers","on","response","captured","version","httpVersion","statusCode","statusMessage","rawHeaders","Object","assign","body","indexOf","gunzip","rawTrailers","pipe","chunk","encoding","push","part","write","end"],"mappings":";;AAAA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,MAAMC,eAAeD,QAAQ,MAAR,EAAgBC,YAArC;;AAEA,MAAMC,gBAAgBH,KAAKG,aAA3B;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,mBAArB,EAA0C;AACzD,MAAIC,UAAUC,MAAV,KAAqB,CAAzB,EACEF,sBAAsB,MAAK,IAA3B,CADF,KAEK,IAAI,OAAOD,WAAP,KAAuB,QAA3B,EAAqC;AACxC,UAAMI,WAAWH,mBAAjB;AACAA,0BAAuBI,OAAD,IAAYA,QAAQD,QAAR,KAAqBA,QAAvD;AACD,GAHI,MAGE,IAAI,OAAOH,mBAAP,KAA+B,UAAnC,EAA+C;AACpD,UAAMK,SAAS,CAAC,CAACL,mBAAjB;AACAA,0BAAsB,MAAKK,MAA3B;AACD;;AAED,SAAO,UAASD,OAAT,EAAkBE,QAAlB,EAA4B;AACjC,QAAIN,oBAAoBI,OAApB,CAAJ,EAAkC;AAChC,YAAMG,UAAU;AACdC,kBAAUJ,QAAQK,GAAR,CAAYD,QADR;AAEdL,kBAAUC,QAAQK,GAAR,CAAYN,QAFR;AAGdO,cAAUN,QAAQK,GAAR,CAAYC,IAHR;AAIdC,cAAUP,QAAQK,GAAR,CAAYE,IAJR;AAKdC,gBAAUR,QAAQQ,MALJ;AAMdC,iBAAUT,QAAQS,OANJ;AAOdC,eAAUV,QAAQU,KAPJ;AAQdC,cAAUX,QAAQW;AARJ,OAAhB;;AAWA,YAAMC,OAAO,IAAIpB,aAAJ,CAAkBW,OAAlB,CAAb;AACA,UAAIH,QAAQa,QAAZ,EACED,KAAKE,WAAL,CAAiBd,QAAQa,QAAzB;AACFD,WAAKG,EAAL,CAAQ,OAAR,EAAiBb,QAAjB;AACAU,WAAKG,EAAL,CAAQ,UAAR,EAAoB,UAASC,QAAT,EAAmB;AACrC,cAAMC,WAAW;AACfC,mBAAgBF,SAASG,WADV;AAEfC,sBAAgBJ,SAASI,UAFV;AAGfC,yBAAgBL,SAASK,aAHV;AAIfC,sBAAgBN,SAASM,UAJV;AAKfb,mBAAgBc,OAAOC,MAAP,CAAc,EAAd,EAAkBR,SAASP,OAA3B,CALD;AAMfgB,gBAAgB;AAND,SAAjB;AAQA,YAAI,CAAC,MAAD,EAAS,SAAT,EAAoBC,OAApB,CAA4BT,SAASR,OAAT,CAAiB,kBAAjB,CAA5B,MAAsE,CAAC,CAA3E,EAA8E;AAC5E,gBAAMkB,SAASpC,cAAf;AACAoC,iBAAOd,QAAP,GAAkBG,SAASH,QAA3B;AACAc,iBAAOC,WAAP,GAAqBZ,SAASY,WAA9B;AACAZ,qBAAWA,SAASa,IAAT,CAAcF,MAAd,CAAX;AACD;AACDX,iBAASD,EAAT,CAAY,MAAZ,EAAoB,UAASe,KAAT,EAAgBC,QAAhB,EAA0B;AAC5Cd,mBAASQ,IAAT,CAAcO,IAAd,CAAmB,CAACF,KAAD,EAAQC,QAAR,CAAnB;AACD,SAFD;AAGAf,iBAASD,EAAT,CAAY,KAAZ,EAAmB,YAAW;AAC5BE,mBAASJ,QAAT,GAAwBG,SAASH,QAAjC;AACAI,mBAASW,WAAT,GAAwBZ,SAASY,WAAjC;AACA1B,mBAAS,IAAT,EAAee,QAAf;AACD,SAJD;AAKD,OAvBD;;AAyBA,UAAIjB,QAAQyB,IAAZ,EACE,KAAK,IAAIQ,IAAT,IAAiBjC,QAAQyB,IAAzB,EACEb,KAAKsB,KAAL,CAAWD,KAAK,CAAL,CAAX,EAAoBA,KAAK,CAAL,CAApB;AACJrB,WAAKuB,GAAL;AACD,KA7CD,MA8CEjC;AACH,GAhDD;AAiDD,CA5DD","file":"pass_through.js","sourcesContent":["const HTTP = require('http');\nconst createGunzip = require('zlib').createGunzip;\n\nconst ClientRequest = HTTP.ClientRequest;\n\nmodule.exports = function passThrough(passThroughFunction) {\n  if (arguments.length === 0)\n    passThroughFunction = ()=> true;\n  else if (typeof passThrough === 'string') {\n    const hostname = passThroughFunction;\n    passThroughFunction = (request)=> request.hostname === hostname;\n  } else if (typeof passThroughFunction !== 'function') {\n    const truthy = !!passThroughFunction;\n    passThroughFunction = ()=> truthy;\n  }\n\n  return function(request, callback) {\n    if (passThroughFunction(request)) {\n      const options = {\n        protocol: request.url.protocol,\n        hostname: request.url.hostname,\n        port:     request.url.port,\n        path:     request.url.path,\n        method:   request.method,\n        headers:  request.headers,\n        agent:    request.agent,\n        auth:     request.auth\n      };\n\n      const http = new ClientRequest(options);\n      if (request.trailers)\n        http.addTrailers(request.trailers);\n      http.on('error', callback);\n      http.on('response', function(response) {\n        const captured = {\n          version:        response.httpVersion,\n          statusCode:     response.statusCode,\n          statusMessage:  response.statusMessage,\n          rawHeaders:     response.rawHeaders,\n          headers:        Object.assign({}, response.headers),\n          body:           []\n        };\n        if (['gzip', 'deflate'].indexOf(captured.headers['content-encoding']) !== -1) {\n          const gunzip = createGunzip();\n          gunzip.trailers = response.trailers;\n          gunzip.rawTrailers = response.rawTrailers;\n          response = response.pipe(gunzip);\n        }\n        response.on('data', function(chunk, encoding) {\n          captured.body.push([chunk, encoding]);\n        });\n        response.on('end', function() {\n          captured.trailers     = response.trailers;\n          captured.rawTrailers  = response.rawTrailers;\n          callback(null, captured);\n        });\n      });\n\n      if (request.body)\n        for (let part of request.body)\n          http.write(part[0], part[1]);\n      http.end();\n    } else\n      callback();\n  };\n};\n\n"]}